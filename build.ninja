# This ninja-build file requires pandoc-tangle, kompile, etc to be in PATH. As such it is not meant
# to be run directly, but through the ./build script.

# Infrastructure generic to all K Projects
# ========================================

builddir = .build
testdir  = $builddir/test

rule kompile
    description     = Kompiling: $out
    command         = kompile --backend $backend --debug --directory $out $in

rule krun
    description     = Kompiling: $out
    command         = kompile --backend $backend --debug --directory $out $in

rule kprove
    description     = Checking specification $in
    command         = kprove --directory $directory $in

tangle_selector = .k
tangle_repository = $builddir/pandoc-tangle
rule tangle
    description = Kompiling: $out
    command     = LUA_PATH=$tangle_repository/?.lua    $
                  pandoc $in -o $out --metadata=code:$tangle_selector --to "$tangle_repository/tangle.lua"

# Plutus specific infrastructure
# ==============================

tangleddir = $builddir/tangled/

build $builddir/plutus-core-java     : kompile $tangleddir/plutus-core.k
    backend = java
build $builddir/plutus-core-ocaml    : kompile $tangleddir/plutus-core.k
    backend = ocaml
build $tangleddir/plutus-core.k      : tangle plutus-core.md
build $tangleddir/plutus-core-spec.k : tangle plutus-core-spec.md

# Testing targets
# ---------------

build test : phony check-spec
build check-spec : kprove $tangleddir/plutus-core-spec.k
    directory = $builddir/plutus-core-java

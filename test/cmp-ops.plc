(program

  (module Foo (import) (export () (lessThan lessThanFive lessThanEq greaterThan greaterThanEq equals))

    (declare lessThan (fun (integer) (fun (integer) (con Prelude.Boolean))))
    (define lessThan (lam x (lam y (builtin lessThanInteger x y))))

    (declare lessThanFive (fun (integer) (con Prelude.Boolean)))
    (define lessThanFive (lam x (builtin lessThanInteger x 5)))

    (declare lessThanEq (fun (integer) (fun (integer) (con Prelude.Boolean))))
    (define lessThanEq (lam x (lam y (builtin lessThanEqualsInteger x y))))

    (declare greaterThan (fun (integer) (fun (integer) (con Prelude.Boolean))))
    (define greaterThan (lam x (lam y (builtin greaterThanInteger x y))))

    (declare greaterThanEq (fun (integer) (fun (integer) (con Prelude.Boolean))))
    (define greaterThanEq (lam x (lam y (builtin greaterThanEqualsInteger x y))))

    (declare equals (fun (integer) (fun (integer) (con Prelude.Boolean))))
    (define equals (lam x (lam y (builtin equalsInteger x y))))

    // (declare myTrue (con Prelude.Boolean))
    // (define myTrue (con Prelude.True))

  )

)
